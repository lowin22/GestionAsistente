@page "/crear-encargado"
@using GestionAsistentes.BlazorUI.Controlador
@using GestionAsistentes.Entidades
@rendermode InteractiveServer
<h3>Crear Encargado</h3>

<EditForm Model="encargado" OnValidSubmit="RegistrarEncargado" FormName="crearEncargadoForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="encargado.Persona.Nombre" />
    </div>

    <div class="mb-3">
        <label for="primerApellido" class="form-label">Primer Apellido</label>
        <InputText id="primerApellido" class="form-control" @bind-Value="encargado.Persona.PrimerApellido" />
    </div>

    <div class="mb-3">
        <label for="segundoApellido" class="form-label">Segundo Apellido</label>
        <InputText id="segundoApellido" class="form-control" @bind-Value="encargado.Persona.SegundoApellido" />
    </div>

    <div class="mb-3">
        <label for="unidadID" class="form-label">Unidad</label>
        <InputSelect id="unidadID" class="form-control" @bind-Value="encargado.UnidadID">
            @foreach (var unidad in listaUnidades)
            {
                <option value="@unidad.UnidadID">@unidad.Nombre</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>
</EditForm>
@if (mensajeExito != null)
{
    <div class="alert alert-success">
        @mensajeExito
    </div>
}
@if (mensajeError != null)
{
    <div class="alert alert-danger">
        @mensajeError
    </div>
}

@code {
    UnidadControlador unidadControlador = new UnidadControlador();
    string mensajeExito;
    string mensajeError;
    List<Unidad> listaUnidades = new List<Unidad>();
    protected override async Task OnInitializedAsync()
    {
        listaUnidades = await unidadControlador.ListarUnidades();
    }
    Encargado encargado = new Encargado
        {
            Persona = new Persona() // Inicializa la persona dentro del encargado
        };

    private async Task RegistrarEncargado()
    {
        EncargadoControlador encargadoControlador = new EncargadoControlador();
        try
        {
            bool exito = await encargadoControlador.RegistrarEncargado(encargado);

            if (exito)
            {
                mensajeExito = "Encargado registrado con éxito.";
                mensajeError = null;
                encargado = new Encargado
                    {
                        Persona = new Persona() 
                    };
            }
            else
            {
                mensajeExito = null;
                mensajeError = "Hubo un problema al registrar el encargado.";
            }
        }
        catch (Exception ex)
        {
            mensajeError = $"Error: {ex.Message}";
            mensajeExito = null;
        }
        StateHasChanged();
    }
}
