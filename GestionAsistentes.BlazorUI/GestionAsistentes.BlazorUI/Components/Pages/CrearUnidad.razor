@page "/crear-unidad"
@using GestionAsistentes.BlazorUI.Components.Layout
@using GestionAsistentes.BlazorUI.Controlador
@using GestionAsistentes.Entidades
@layout LayoutPrincipal
@rendermode InteractiveServer

<h1>Crear unidades</h1>

<EditForm Model="unidad" OnValidSubmit="RegistrarUnidad" FormName="crearRegistrarUnidad">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre Unidad:</label>
        <InputText id="nombre" class="form-control" @bind-Value="unidad.Nombre" />
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>
</EditForm>

@if (mensajeExito != null)
{
    <div class="alert alert-success">
        @mensajeExito
    </div>
}
@if (mensajeError != null)
{
    <div class="alert alert-danger">
        @mensajeError
    </div>
}

<div class="col-md-12 col-xs-12 col-sm-12" style="text-align: center; overflow-y: auto; top: 0px; left: 0px;">
    <div class="table-responsive col-md-12 col-xs-12 col-sm-12" style="text-align: center; overflow-y: auto;">
        <table class="table table-bordered">
            <thead style="text-align: center;">
                <tr style="text-align: center">
                    <th>Acciones</th>
                    <th>Unidad</th>
                    <th>Nombre</th>
                </tr>
            </thead>
            <tbody>
                @if (listaUnidades != null)
                {
                    @foreach (var unidad in listaUnidades)
                    {
                        <tr>
                            <td>
                                <button class="btn btn-warning" @onclick="() => EditarUnidad(unidad.UnidadID)">
                                    <!-- Icono SVG para editar -->
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2L3 10.207V13h2.793L14 4.793 11.207 2zm1.586 1.586L13 4.793 11.207 3 12.793 1.414zM1 13.5V16h2.5l2-2H3v-1H1.5z" />
                                    </svg>
                                </button>
                                <button class="btn btn-danger" @onclick="() => EliminarUnidad(unidad.UnidadID)">
                                    <!-- Icono SVG para eliminar -->
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                        <path d="M5.5 5.5A.5.5 0 0 1 6 5h4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5H6a.5.5 0 0 1-.5-.5v-7zm2-1A1.5 1.5 0 0 0 6 5v7a1.5 1.5 0 0 0 3 0V5a1.5 1.5 0 0 0-1.5-1.5z" />
                                        <path fill-rule="evenodd" d="M8 1a2 2 0 0 0-2 2h4a2 2 0 0 0-2-2zM4.5 3a.5.5 0 0 1-.5-.5V1h8v1.5a.5.5 0 0 1-.5.5h-8z" />
                                    </svg>
                                </button>
                            </td>
                            <td>@unidad.UnidadID</td>
                            <td>@unidad.Nombre</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    UnidadControlador unidadControlador = new UnidadControlador();
    Unidad unidad = new Unidad();
    string mensajeExito;
    string mensajeError;
    List<Unidad> listaUnidades = new List<Unidad>();

    protected override async Task OnInitializedAsync()
    {
        listaUnidades = await unidadControlador.ListarUnidades(); 
    }
    private async Task RegistrarUnidad()
    {

        bool exito = await unidadControlador.RegistrarUnidad(unidad);

        if (exito)
        {
            mensajeExito = "La unidad fue registrada exitosamente.";
            mensajeError = null;
            unidad = new Unidad();
        }
        else
        {
            mensajeError = "Hubo un error al registrar la unidad.";
            mensajeExito = null;
        }
        StateHasChanged();
    }
    private async Task<bool> EditarUnidad(int UnidadID) { return false; }
    private async Task<bool> EliminarUnidad(int UnidadID) { return true; }

}
