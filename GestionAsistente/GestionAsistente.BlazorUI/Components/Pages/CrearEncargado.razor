@page "/crear-encargado"
@using GestionAsistente.BlazorUI.Controlador
@using GestionAsistente.Entidades
@using GestionAsistente.BlazorUI.Controlador
@rendermode InteractiveServer
<h3>Crear Encargado</h3>

<EditForm Model="encargadoControlador.encargado" OnValidSubmit="RegistrarEncargado" FormName="crearEncargadoForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="encargadoControlador.encargado.Persona.Nombre" />
    </div>

    <div class="mb-3">
        <label for="primerApellido" class="form-label">Primer Apellido</label>
        <InputText id="primerApellido" class="form-control" @bind-Value="encargadoControlador.encargado.Persona.PrimerApellido" />
    </div>

    <div class="mb-3">
        <label for="segundoApellido" class="form-label">Segundo Apellido</label>
        <InputText id="segundoApellido" class="form-control" @bind-Value="encargadoControlador.encargado.Persona.SegundoApellido" />
    </div>

    <div class="mb-3">
        <label for="unidadID" class="form-label">Unidad</label>
        <InputSelect id="unidadID" class="form-control" @bind-Value="encargadoControlador.encargado.Unidad.UnidadID">
            @foreach (var unidad in encargadoControlador.listaUnidades)
            {
                <option value="@unidad.UnidadID">@unidad.Nombre</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>
</EditForm>
@if (encargadoControlador.mensajeExito != null)
{
    <div class="alert alert-success">
        @encargadoControlador.mensajeExito
    </div>
}
@if (encargadoControlador.mensajeError != null)
{
    <div class="alert alert-danger">
        @encargadoControlador.mensajeError
    </div>
}

@code {
    public EncargadoControlador encargadoControlador = new EncargadoControlador();

    protected override async Task OnInitializedAsync()
    {
        encargadoControlador.listarUnidades();
    }
   
    private async Task RegistrarEncargado()
    {
        await encargadoControlador.RegistrarEncargado(encargadoControlador.encargado);
        StateHasChanged();
    }
}
