@page "/crear-encargado"
@using GestionAsistente.BlazorUI.Controlador
@using GestionAsistente.Entidades
@using GestionAsistente.BlazorUI.Controlador
@rendermode InteractiveServer
<h3>Crear Encargado</h3>

<EditForm Model="encargadoControlador.encargado" OnValidSubmit="RegistrarEncargado" FormName="crearEncargadoForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="encargadoControlador.encargado.Persona.Nombre" />
    </div>

    <div class="mb-3">
        <label for="primerApellido" class="form-label">Primer Apellido</label>
        <InputText id="primerApellido" class="form-control" @bind-Value="encargadoControlador.encargado.Persona.PrimerApellido" />
    </div>

    <div class="mb-3">
        <label for="segundoApellido" class="form-label">Segundo Apellido</label>
        <InputText id="segundoApellido" class="form-control" @bind-Value="encargadoControlador.encargado.Persona.SegundoApellido" />
    </div>

    <div class="mb-3">
        <label for="unidadID" class="form-label">Unidad</label>
        <InputSelect id="unidadID" class="form-control" @bind-Value="encargadoControlador.encargado.Unidad.UnidadID">
            @foreach (var unidad in encargadoControlador.listaUnidades)
            {
                <option value="@unidad.UnidadID">@unidad.Nombre</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Registrar</button>
</EditForm>

@if (encargadoControlador.mensajeExito != null)
{
    <div id="ModalsConfirmacion" class="modal fade show d-sm-inline-block" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content custom-modal">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmación</h5>
                    <button type="button" class="close" @onclick="CerrarModal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@mensajeExito</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btnAceptar" @onclick="CerrarModal">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
}

@if (encargadoControlador.mensajeError != null)
{
    <div id="ModalsConfirmacion" class="modal fade show d-sm-inline-block" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content custom-modal">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmación</h5>
                    <button type="button" class="close" @onclick="CerrarModalError" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>@mensajeError Error al registrar</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btnAceptar" @onclick="CerrarModalError">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public EncargadoControlador encargadoControlador = new EncargadoControlador();
    private string mensajeExito, mensajeError;

    protected override async Task OnInitializedAsync()
    {
        encargadoControlador.listarUnidades();
    }
   
    private async Task RegistrarEncargado()
    {

        bool exito = await encargadoControlador.RegistrarEncargado(encargadoControlador.encargado);
        if (exito)
        {
            mensajeExito = "Asistente registrado con éxito.";
            mensajeError = null;
            LimpiarFormulario();
            StateHasChanged();
        }
        else
        {

            mensajeExito = null;
            mensajeError = "Hubo un problema al registrar el asistente.";

        }

    }

    private void LimpiarFormulario()
    {
        
    }

    private void CerrarModal()
    {
        mensajeExito = null;
        StateHasChanged(); // Actualiza el estado para ocultar el modal en la interfaz
    }

    private void CerrarModalError()
    {
        mensajeError = null;
        StateHasChanged(); // Actualiza el estado para ocultar el modal en la interfaz
    }

}
