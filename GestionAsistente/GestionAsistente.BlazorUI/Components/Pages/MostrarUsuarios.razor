@page "/mostrar-usuarios"
@using GestionAsistente.BlazorUI.Components.Layout
@using GestionAsistente.BlazorUI.Controlador
@using GestionAsistente.Entidades
@layout LayoutPrincipal
@rendermode InteractiveServer

<h3 class="mb-4">Mostrar Usuarios</h3>
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#CrearUsuario">
    Crear Usuario
</button>
<div class="col-md-12 col-xs-12 col-sm-12" style="text-align: center; overflow-y: auto; top: 0px; left: 0px;">
    <div class="table-responsive col-md-12 col-xs-12 col-sm-12" style="text-align: center; overflow-y: auto;">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Opciones</th>
                    <th>Nombre Usuario</th>
                    <th>Rol</th>
                    <th>Unidad</th>
                </tr>
            </thead>
            <tbody>

                @if (listaUsuarios != null)

                {
                    @foreach (var usuario in listaUsuarios)
                    {
                        <tr>
                            <td>
                                <button class="btn" data-bs-toggle="modal" data-bs-target="#EditarUsuario" @onclick="() => EditarUsuario(usuario.UsuarioID)">
                                    <!-- Icono SVG para editar -->
                                    <svg width="16" height="16" fill="currentColor" class="bi bi-pen" viewBox="0 0 16 16">
                                        <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001m-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708z" />
                                    </svg>
                                </button>
                                <button class="btn" data-bs-toggle="modal" data-bs-target="#ConfirmarEliminar" @onclick="() => seleccionarUsuarioEliminar(usuario.UsuarioID)">
                                    <!-- Icono SVG para eliminar -->
                                    <svg width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                        <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                    </svg>
                                </button>
                            </td>
                            <td>@usuario.Persona.Nombre</td>
                            <td>@usuario.Rol?.Nombre</td>
                            <td>@usuario.Unidad?.Nombre</td>
                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="CrearUsuario" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CrearUsuario">Registrar Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="crearUsuario" OnValidSubmit="RegistrarUsuario" FormName="crearUsuarioForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre</label>
                        <InputText id="nombre" class="form-control" @bind-Value="crearUsuario.Persona.Nombre" />
                    </div>
                    <div class="mb-3">
                        <label for="primerApellido" class="form-label">Primer Apellido</label>
                        <InputText id="primerApellido" class="form-control" @bind-Value="crearUsuario.Persona.PrimerApellido" />
                    </div>
                    <div class="mb-3">
                        <label for="segundoApellido" class="form-label">Segundo Apellido</label>
                        <InputText id="segundoApellido" class="form-control" @bind-Value="crearUsuario.Persona.SegundoApellido" />
                    </div>
                    <div class="mb-3">
                        <label for="contrasenia" class="form-label">Contraseña</label>
                        <InputText type="password" id="contrasenia" class="form-control" @bind-Value="crearUsuario.Contrasenia" />
                    </div>
                    <div class="mb-3">
                        <label for="unidadID" class="form-label">Unidad</label>
                        <InputSelect id="unidadID" class="form-control" @bind-Value="crearUsuario.UnidadID">
                            @foreach (var unidad in listaUnidades)
                            {
                                <option value="@unidad.UnidadID">@unidad.Nombre</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="mb-3">
                        <label for="rolID" class="form-label">Rol</label>
                        <InputSelect id="rolID" class="form-control" @bind-Value="crearUsuario.RolID">
                            @foreach (var rol in listaRoles)
                            {
                                <option value="@rol.RolID">@rol.Nombre</option>
                            }
                        </InputSelect>
                    </div>
                    <button type="submit" class="btn btn-primary " data-bs-dismiss="modal">Registrar Usuario</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="EditarUsuario" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditarUsuario">Actualizar Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="usuario" OnValidSubmit="ActualizarUsuario" FormName="actualizarUsuarioForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre</label>
                        <InputText id="nombre" class="form-control" @bind-Value="usuario.Persona.Nombre" />
                    </div>
                    <div class="mb-3">
                        <label for="primerApellido" class="form-label">Primer Apellido</label>
                        <InputText id="primerApellido" class="form-control" @bind-Value="usuario.Persona.PrimerApellido" />
                    </div>
                    <div class="mb-3">
                        <label for="segundoApellido" class="form-label">Segundo Apellido</label>
                        <InputText id="segundoApellido" class="form-control" @bind-Value="usuario.Persona.SegundoApellido" />
                    </div>
                    <div class="mb-3">
                        <label for="contrasenia" class="form-label">Contraseña</label>
                        <InputText type="password" id="contrasenia" class="form-control" @bind-Value="usuario.Contrasenia" />
                    </div>
                    <div class="mb-3">
                        <label for="unidadID" class="form-label">Unidad</label>
                        <InputSelect id="unidadID" class="form-control" @bind-Value="usuario.UnidadID">
                            @foreach (var unidad in listaUnidades)
                            {
                                <option value="@unidad.UnidadID">@unidad.Nombre</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="mb-3">
                        <label for="rolID" class="form-label">Rol</label>
                        <InputSelect id="rolID" class="form-control" @bind-Value="usuario.RolID">
                            @foreach (var rol in listaRoles)
                            {
                                <option value="@rol.RolID">@rol.Nombre</option>
                            }
                        </InputSelect>
                    </div>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Actualizar Encargado</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ConfirmarEliminar" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h5 class="modal-title" id="ConfirmarEliminar">¿Eliminar usuario?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <p class="fs-5">Esta acción no se puede deshacer.</p>
                <p class="text-danger">¿Estás seguro de que deseas eliminar este usuario?</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button class="btn btn-primary" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button class="btn btn-danger" data-bs-dismiss="modal" @onclick="() => EliminarUsuario(eliminarUsuario.UsuarioID)">

                    Confirmar
                </button>

            </div>
        </div>
    </div>
</div>

@code {

    private UsuarioControlador usuarioControlador = new UsuarioControlador();
    private UnidadControlador unidadControlador = new UnidadControlador();
    private RolControlador rolControlador = new RolControlador();

    private List<Usuario> listaUsuarios = new List<Usuario>();
    private List<Unidad> listaUnidades = new List<Unidad>();
    private List<Rol> listaRoles = new List<Rol>();

    private Usuario usuario = new Usuario
    {
            Persona = new Persona()
    };

    Usuario actualizarUsuario = new Usuario
        {
            Persona = new Persona()
        };

    private Usuario crearUsuario = new Usuario()
    {
        Persona = new Persona()
    };

    Usuario eliminarUsuario = new Usuario
        {
            Persona = new Persona()
        };

    async Task EditarUsuario(int usuarioID)
    {

        actualizarUsuario = listaUsuarios.Find(u => u.UsuarioID == usuarioID);

        usuario.UsuarioID = actualizarUsuario.UsuarioID;
        usuario.PersonaID = actualizarUsuario.Persona.PersonaID;
        usuario.Persona.Nombre = actualizarUsuario.Persona.Nombre;
        usuario.Persona.PrimerApellido = actualizarUsuario.Persona.PrimerApellido;
        usuario.Persona.SegundoApellido = actualizarUsuario.Persona.SegundoApellido;
        usuario.UnidadID = actualizarUsuario.UnidadID;
        usuario.RolID = actualizarUsuario.RolID;
        usuario.Contrasenia = actualizarUsuario.Contrasenia;
    }


    protected override async Task OnInitializedAsync()
    {
        listaUsuarios = await usuarioControlador.ListarUsuarios();
        listaUnidades = await unidadControlador.ListarUnidades();
        listaRoles = await rolControlador.ListarRoles();
    }

    private async Task RegistrarUsuario()
    {

        await usuarioControlador.RegistrarUsuario(crearUsuario);

        listaUsuarios = await usuarioControlador.ListarUsuarios();

        crearUsuario = new Usuario

            {

                Persona = new Persona()

            };

        StateHasChanged();

    }

    private async Task seleccionarUsuarioEliminar(int usuarioID)
    {

        eliminarUsuario = listaUsuarios.Find(u => u.UsuarioID == usuarioID);

    }

    async Task EliminarUsuario(int usuarioID)

    {

        await usuarioControlador.EliminarUsuario(usuarioID);

        listaUsuarios = await usuarioControlador.ListarUsuarios();

        StateHasChanged();
    }

    private async Task ActualizarUsuario()
    {
        
        await usuarioControlador.ActualizarUsuario(usuario);

        listaUsuarios = await usuarioControlador.ListarUsuarios();

        StateHasChanged();

    }

}