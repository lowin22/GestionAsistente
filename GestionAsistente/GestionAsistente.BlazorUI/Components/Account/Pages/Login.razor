@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using GestionAsistente.BlazorUI.Data

@layout Layout.LayoutMain
@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Iniciar Sesión</PageTitle>

<div class="row d-flex justify-content-center align-items-center">
    <div class="col-md-4 ">
        <h3 style="text-align:center" >Bienvenido</h3>
        <section class="justify-content-center" style="margin-bottom: 1em; background-color:none; padding: 0; ">
            <!-- Mensaje de error general -->
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }

            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                <DataAnnotationsValidator />
                

                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Username" class="form-control" autocomplete="username" aria-required="true" placeholder="Usuario" />
                    <label style="max-height: 1em;" for="username" class="form-label">Usuario</label>
                    <ValidationMessage For="() => Input.Username" class="text-danger" />
                </div>

                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Contraseña" />
                    <label for="password" class="form-label">Contraseña</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger" />
                </div>

                @* <div class="form-check mb-3">
                    <InputCheckbox @bind-Value="Input.RememberMe" class="form-check-input" />
                    <label class="form-check-label">Recordarme</label>
                </div> *@

                <div style="text-align:center">
                    <button type="submit" class="w-40 h-20 btn btn-primary">Iniciar Sesión</button>
                </div>
            </EditForm>
        </section>
    </div>
</div>

@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
           // await HttpContext.SignOutAsync(IdentityConstants.ApplicationScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Username, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("Usuario ha iniciado sesión.");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo(
                "Account/LoginWith2fa",
                new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("Cuenta de usuario bloqueada.");
            RedirectManager.RedirectTo("Account/Lockout");
        }
        else
        {
            // Mensaje de error personalizado en caso de fallo de inicio de sesión
            errorMessage = "Intento de inicio de sesión inválido. Verifique su usuario y contraseña.";
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Por favor, ingrese su nombre de usuario.")]
        public string Username { get; set; } = "";

        [Required(ErrorMessage = "Por favor, ingrese su contraseña.")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "¿Recordarme?")]
        public bool RememberMe { get; set; }
    }
}
